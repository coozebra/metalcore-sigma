/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  BaseContract,
  BigNumber,
  BigNumberish,
  BytesLike,
  CallOverrides,
  ContractTransaction,
  Overrides,
  PopulatedTransaction,
  Signer,
  utils,
} from "ethers";
import { FunctionFragment, Result, EventFragment } from "@ethersproject/abi";
import { Listener, Provider } from "@ethersproject/providers";
import { TypedEventFilter, TypedEvent, TypedListener, OnEvent } from "./common";

export type AcceptedStruct = {
  erc20: boolean;
  erc721: boolean;
  erc1155: boolean;
};

export type AcceptedStructOutput = [boolean, boolean, boolean] & {
  erc20: boolean;
  erc721: boolean;
  erc1155: boolean;
};

export interface PortalInterface extends utils.Interface {
  functions: {
    "accepted(address)": FunctionFragment;
    "burnAsset(address,uint256)": FunctionFragment;
    "burnBatchAsset(address,uint256[])": FunctionFragment;
    "craftAsset(address,address,address,uint256[],uint256[],uint256)": FunctionFragment;
    "createResource(address,uint256)": FunctionFragment;
    "depositERC1155(address,uint256,uint256,bytes)": FunctionFragment;
    "depositERC20(address,uint256,bytes)": FunctionFragment;
    "depositERC721(address,uint256,bytes)": FunctionFragment;
    "mergeAsset(address,uint256,uint256)": FunctionFragment;
    "mintAsset(address,address)": FunctionFragment;
    "mintBatchAsset(address,address,uint256)": FunctionFragment;
    "mintBatchResource(address,address,uint256[],uint256[])": FunctionFragment;
    "nonces(address)": FunctionFragment;
    "onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)": FunctionFragment;
    "onERC1155Received(address,address,uint256,uint256,bytes)": FunctionFragment;
    "onERC721Received(address,address,uint256,bytes)": FunctionFragment;
    "owner()": FunctionFragment;
    "pause()": FunctionFragment;
    "paused()": FunctionFragment;
    "renounceOwnership()": FunctionFragment;
    "setSigner(address)": FunctionFragment;
    "setTokenAcceptance(address,(bool,bool,bool))": FunctionFragment;
    "signer()": FunctionFragment;
    "supportsInterface(bytes4)": FunctionFragment;
    "transferOwnership(address)": FunctionFragment;
    "unpause()": FunctionFragment;
    "withdrawERC1155(address,uint256,uint256,bytes)": FunctionFragment;
    "withdrawERC1155Batch(address,uint256[],uint256[],bytes)": FunctionFragment;
    "withdrawERC20(address,uint256,bytes)": FunctionFragment;
    "withdrawERC721(address,uint256,bytes)": FunctionFragment;
    "withdrawERC721Batch(address,uint256[],bytes)": FunctionFragment;
  };

  encodeFunctionData(functionFragment: "accepted", values: [string]): string;
  encodeFunctionData(
    functionFragment: "burnAsset",
    values: [string, BigNumberish]
  ): string;
  encodeFunctionData(
    functionFragment: "burnBatchAsset",
    values: [string, BigNumberish[]]
  ): string;
  encodeFunctionData(
    functionFragment: "craftAsset",
    values: [
      string,
      string,
      string,
      BigNumberish[],
      BigNumberish[],
      BigNumberish
    ]
  ): string;
  encodeFunctionData(
    functionFragment: "createResource",
    values: [string, BigNumberish]
  ): string;
  encodeFunctionData(
    functionFragment: "depositERC1155",
    values: [string, BigNumberish, BigNumberish, BytesLike]
  ): string;
  encodeFunctionData(
    functionFragment: "depositERC20",
    values: [string, BigNumberish, BytesLike]
  ): string;
  encodeFunctionData(
    functionFragment: "depositERC721",
    values: [string, BigNumberish, BytesLike]
  ): string;
  encodeFunctionData(
    functionFragment: "mergeAsset",
    values: [string, BigNumberish, BigNumberish]
  ): string;
  encodeFunctionData(
    functionFragment: "mintAsset",
    values: [string, string]
  ): string;
  encodeFunctionData(
    functionFragment: "mintBatchAsset",
    values: [string, string, BigNumberish]
  ): string;
  encodeFunctionData(
    functionFragment: "mintBatchResource",
    values: [string, string, BigNumberish[], BigNumberish[]]
  ): string;
  encodeFunctionData(functionFragment: "nonces", values: [string]): string;
  encodeFunctionData(
    functionFragment: "onERC1155BatchReceived",
    values: [string, string, BigNumberish[], BigNumberish[], BytesLike]
  ): string;
  encodeFunctionData(
    functionFragment: "onERC1155Received",
    values: [string, string, BigNumberish, BigNumberish, BytesLike]
  ): string;
  encodeFunctionData(
    functionFragment: "onERC721Received",
    values: [string, string, BigNumberish, BytesLike]
  ): string;
  encodeFunctionData(functionFragment: "owner", values?: undefined): string;
  encodeFunctionData(functionFragment: "pause", values?: undefined): string;
  encodeFunctionData(functionFragment: "paused", values?: undefined): string;
  encodeFunctionData(
    functionFragment: "renounceOwnership",
    values?: undefined
  ): string;
  encodeFunctionData(functionFragment: "setSigner", values: [string]): string;
  encodeFunctionData(
    functionFragment: "setTokenAcceptance",
    values: [string, AcceptedStruct]
  ): string;
  encodeFunctionData(functionFragment: "signer", values?: undefined): string;
  encodeFunctionData(
    functionFragment: "supportsInterface",
    values: [BytesLike]
  ): string;
  encodeFunctionData(
    functionFragment: "transferOwnership",
    values: [string]
  ): string;
  encodeFunctionData(functionFragment: "unpause", values?: undefined): string;
  encodeFunctionData(
    functionFragment: "withdrawERC1155",
    values: [string, BigNumberish, BigNumberish, BytesLike]
  ): string;
  encodeFunctionData(
    functionFragment: "withdrawERC1155Batch",
    values: [string, BigNumberish[], BigNumberish[], BytesLike]
  ): string;
  encodeFunctionData(
    functionFragment: "withdrawERC20",
    values: [string, BigNumberish, BytesLike]
  ): string;
  encodeFunctionData(
    functionFragment: "withdrawERC721",
    values: [string, BigNumberish, BytesLike]
  ): string;
  encodeFunctionData(
    functionFragment: "withdrawERC721Batch",
    values: [string, BigNumberish[], BytesLike]
  ): string;

  decodeFunctionResult(functionFragment: "accepted", data: BytesLike): Result;
  decodeFunctionResult(functionFragment: "burnAsset", data: BytesLike): Result;
  decodeFunctionResult(
    functionFragment: "burnBatchAsset",
    data: BytesLike
  ): Result;
  decodeFunctionResult(functionFragment: "craftAsset", data: BytesLike): Result;
  decodeFunctionResult(
    functionFragment: "createResource",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "depositERC1155",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "depositERC20",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "depositERC721",
    data: BytesLike
  ): Result;
  decodeFunctionResult(functionFragment: "mergeAsset", data: BytesLike): Result;
  decodeFunctionResult(functionFragment: "mintAsset", data: BytesLike): Result;
  decodeFunctionResult(
    functionFragment: "mintBatchAsset",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "mintBatchResource",
    data: BytesLike
  ): Result;
  decodeFunctionResult(functionFragment: "nonces", data: BytesLike): Result;
  decodeFunctionResult(
    functionFragment: "onERC1155BatchReceived",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "onERC1155Received",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "onERC721Received",
    data: BytesLike
  ): Result;
  decodeFunctionResult(functionFragment: "owner", data: BytesLike): Result;
  decodeFunctionResult(functionFragment: "pause", data: BytesLike): Result;
  decodeFunctionResult(functionFragment: "paused", data: BytesLike): Result;
  decodeFunctionResult(
    functionFragment: "renounceOwnership",
    data: BytesLike
  ): Result;
  decodeFunctionResult(functionFragment: "setSigner", data: BytesLike): Result;
  decodeFunctionResult(
    functionFragment: "setTokenAcceptance",
    data: BytesLike
  ): Result;
  decodeFunctionResult(functionFragment: "signer", data: BytesLike): Result;
  decodeFunctionResult(
    functionFragment: "supportsInterface",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "transferOwnership",
    data: BytesLike
  ): Result;
  decodeFunctionResult(functionFragment: "unpause", data: BytesLike): Result;
  decodeFunctionResult(
    functionFragment: "withdrawERC1155",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "withdrawERC1155Batch",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "withdrawERC20",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "withdrawERC721",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "withdrawERC721Batch",
    data: BytesLike
  ): Result;

  events: {
    "LogAssetCrafted(address,uint256)": EventFragment;
    "LogAssetMerged(address,uint256,uint256,uint256)": EventFragment;
    "LogERC1155BatchReceived(address,address,uint256[],uint256[],bytes)": EventFragment;
    "LogERC1155Deposited(address,uint256,uint256,address)": EventFragment;
    "LogERC1155Received(address,address,uint256,uint256,bytes)": EventFragment;
    "LogERC1155Withdrawn(address,uint256,uint256,address)": EventFragment;
    "LogERC20Deposited(address,uint256,address)": EventFragment;
    "LogERC20Withdrawn(address,uint256,address)": EventFragment;
    "LogERC721Deposited(address,uint256,address)": EventFragment;
    "LogERC721Received(address,address,uint256,bytes)": EventFragment;
    "LogERC721Withdrawn(address,uint256,address)": EventFragment;
    "LogSignerSet(address)": EventFragment;
    "LogTokenAcceptanceSet(address,tuple)": EventFragment;
    "OwnershipTransferred(address,address)": EventFragment;
    "Paused(address)": EventFragment;
    "Unpaused(address)": EventFragment;
  };

  getEvent(nameOrSignatureOrTopic: "LogAssetCrafted"): EventFragment;
  getEvent(nameOrSignatureOrTopic: "LogAssetMerged"): EventFragment;
  getEvent(nameOrSignatureOrTopic: "LogERC1155BatchReceived"): EventFragment;
  getEvent(nameOrSignatureOrTopic: "LogERC1155Deposited"): EventFragment;
  getEvent(nameOrSignatureOrTopic: "LogERC1155Received"): EventFragment;
  getEvent(nameOrSignatureOrTopic: "LogERC1155Withdrawn"): EventFragment;
  getEvent(nameOrSignatureOrTopic: "LogERC20Deposited"): EventFragment;
  getEvent(nameOrSignatureOrTopic: "LogERC20Withdrawn"): EventFragment;
  getEvent(nameOrSignatureOrTopic: "LogERC721Deposited"): EventFragment;
  getEvent(nameOrSignatureOrTopic: "LogERC721Received"): EventFragment;
  getEvent(nameOrSignatureOrTopic: "LogERC721Withdrawn"): EventFragment;
  getEvent(nameOrSignatureOrTopic: "LogSignerSet"): EventFragment;
  getEvent(nameOrSignatureOrTopic: "LogTokenAcceptanceSet"): EventFragment;
  getEvent(nameOrSignatureOrTopic: "OwnershipTransferred"): EventFragment;
  getEvent(nameOrSignatureOrTopic: "Paused"): EventFragment;
  getEvent(nameOrSignatureOrTopic: "Unpaused"): EventFragment;
}

export type LogAssetCraftedEvent = TypedEvent<
  [string, BigNumber],
  { asset: string; newTokenId: BigNumber }
>;

export type LogAssetCraftedEventFilter = TypedEventFilter<LogAssetCraftedEvent>;

export type LogAssetMergedEvent = TypedEvent<
  [string, BigNumber, BigNumber, BigNumber],
  {
    asset: string;
    tokenId0: BigNumber;
    tokenId1: BigNumber;
    newTokenId: BigNumber;
  }
>;

export type LogAssetMergedEventFilter = TypedEventFilter<LogAssetMergedEvent>;

export type LogERC1155BatchReceivedEvent = TypedEvent<
  [string, string, BigNumber[], BigNumber[], string],
  {
    operator: string;
    from: string;
    ids: BigNumber[];
    values: BigNumber[];
    data: string;
  }
>;

export type LogERC1155BatchReceivedEventFilter =
  TypedEventFilter<LogERC1155BatchReceivedEvent>;

export type LogERC1155DepositedEvent = TypedEvent<
  [string, BigNumber, BigNumber, string],
  { token: string; tokenId: BigNumber; amount: BigNumber; account: string }
>;

export type LogERC1155DepositedEventFilter =
  TypedEventFilter<LogERC1155DepositedEvent>;

export type LogERC1155ReceivedEvent = TypedEvent<
  [string, string, BigNumber, BigNumber, string],
  {
    operator: string;
    from: string;
    id: BigNumber;
    value: BigNumber;
    data: string;
  }
>;

export type LogERC1155ReceivedEventFilter =
  TypedEventFilter<LogERC1155ReceivedEvent>;

export type LogERC1155WithdrawnEvent = TypedEvent<
  [string, BigNumber, BigNumber, string],
  { token: string; tokenId: BigNumber; amount: BigNumber; account: string }
>;

export type LogERC1155WithdrawnEventFilter =
  TypedEventFilter<LogERC1155WithdrawnEvent>;

export type LogERC20DepositedEvent = TypedEvent<
  [string, BigNumber, string],
  { token: string; amount: BigNumber; account: string }
>;

export type LogERC20DepositedEventFilter =
  TypedEventFilter<LogERC20DepositedEvent>;

export type LogERC20WithdrawnEvent = TypedEvent<
  [string, BigNumber, string],
  { token: string; amount: BigNumber; account: string }
>;

export type LogERC20WithdrawnEventFilter =
  TypedEventFilter<LogERC20WithdrawnEvent>;

export type LogERC721DepositedEvent = TypedEvent<
  [string, BigNumber, string],
  { token: string; tokenId: BigNumber; account: string }
>;

export type LogERC721DepositedEventFilter =
  TypedEventFilter<LogERC721DepositedEvent>;

export type LogERC721ReceivedEvent = TypedEvent<
  [string, string, BigNumber, string],
  { operator: string; from: string; tokenId: BigNumber; data: string }
>;

export type LogERC721ReceivedEventFilter =
  TypedEventFilter<LogERC721ReceivedEvent>;

export type LogERC721WithdrawnEvent = TypedEvent<
  [string, BigNumber, string],
  { token: string; tokenId: BigNumber; account: string }
>;

export type LogERC721WithdrawnEventFilter =
  TypedEventFilter<LogERC721WithdrawnEvent>;

export type LogSignerSetEvent = TypedEvent<[string], { signer: string }>;

export type LogSignerSetEventFilter = TypedEventFilter<LogSignerSetEvent>;

export type LogTokenAcceptanceSetEvent = TypedEvent<
  [string, AcceptedStructOutput],
  { token: string; accepted: AcceptedStructOutput }
>;

export type LogTokenAcceptanceSetEventFilter =
  TypedEventFilter<LogTokenAcceptanceSetEvent>;

export type OwnershipTransferredEvent = TypedEvent<
  [string, string],
  { previousOwner: string; newOwner: string }
>;

export type OwnershipTransferredEventFilter =
  TypedEventFilter<OwnershipTransferredEvent>;

export type PausedEvent = TypedEvent<[string], { account: string }>;

export type PausedEventFilter = TypedEventFilter<PausedEvent>;

export type UnpausedEvent = TypedEvent<[string], { account: string }>;

export type UnpausedEventFilter = TypedEventFilter<UnpausedEvent>;

export interface Portal extends BaseContract {
  connect(signerOrProvider: Signer | Provider | string): this;
  attach(addressOrName: string): this;
  deployed(): Promise<this>;

  interface: PortalInterface;

  queryFilter<TEvent extends TypedEvent>(
    event: TypedEventFilter<TEvent>,
    fromBlockOrBlockhash?: string | number | undefined,
    toBlock?: string | number | undefined
  ): Promise<Array<TEvent>>;

  listeners<TEvent extends TypedEvent>(
    eventFilter?: TypedEventFilter<TEvent>
  ): Array<TypedListener<TEvent>>;
  listeners(eventName?: string): Array<Listener>;
  removeAllListeners<TEvent extends TypedEvent>(
    eventFilter: TypedEventFilter<TEvent>
  ): this;
  removeAllListeners(eventName?: string): this;
  off: OnEvent<this>;
  on: OnEvent<this>;
  once: OnEvent<this>;
  removeListener: OnEvent<this>;

  functions: {
    accepted(
      arg0: string,
      overrides?: CallOverrides
    ): Promise<
      [boolean, boolean, boolean] & {
        erc20: boolean;
        erc721: boolean;
        erc1155: boolean;
      }
    >;

    burnAsset(
      _asset: string,
      _tokenId: BigNumberish,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<ContractTransaction>;

    burnBatchAsset(
      _asset: string,
      _tokenIds: BigNumberish[],
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<ContractTransaction>;

    craftAsset(
      _asset: string,
      _resource: string,
      _currency: string,
      _tokenIds: BigNumberish[],
      _amounts: BigNumberish[],
      _currencyAmount: BigNumberish,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<ContractTransaction>;

    createResource(
      _resource: string,
      _amount: BigNumberish,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<ContractTransaction>;

    depositERC1155(
      _token: string,
      _tokenId: BigNumberish,
      _amount: BigNumberish,
      _sig: BytesLike,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<ContractTransaction>;

    depositERC20(
      _token: string,
      _amount: BigNumberish,
      _sig: BytesLike,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<ContractTransaction>;

    depositERC721(
      _token: string,
      _tokenId: BigNumberish,
      _sig: BytesLike,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<ContractTransaction>;

    mergeAsset(
      _asset: string,
      _tokenId0: BigNumberish,
      _tokenId1: BigNumberish,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<ContractTransaction>;

    mintAsset(
      _asset: string,
      _account: string,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<ContractTransaction>;

    mintBatchAsset(
      _asset: string,
      _account: string,
      _amount: BigNumberish,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<ContractTransaction>;

    mintBatchResource(
      _resource: string,
      _account: string,
      _tokenIds: BigNumberish[],
      _amounts: BigNumberish[],
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<ContractTransaction>;

    nonces(arg0: string, overrides?: CallOverrides): Promise<[BigNumber]>;

    onERC1155BatchReceived(
      _operator: string,
      _from: string,
      _ids: BigNumberish[],
      _values: BigNumberish[],
      _data: BytesLike,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<ContractTransaction>;

    onERC1155Received(
      _operator: string,
      _from: string,
      _id: BigNumberish,
      _value: BigNumberish,
      _data: BytesLike,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<ContractTransaction>;

    onERC721Received(
      _operator: string,
      _from: string,
      _tokenId: BigNumberish,
      _data: BytesLike,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<ContractTransaction>;

    owner(overrides?: CallOverrides): Promise<[string]>;

    pause(
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<ContractTransaction>;

    paused(overrides?: CallOverrides): Promise<[boolean]>;

    renounceOwnership(
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<ContractTransaction>;

    setSigner(
      _signer: string,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<ContractTransaction>;

    setTokenAcceptance(
      _token: string,
      _accepted: AcceptedStruct,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<ContractTransaction>;

    signer(overrides?: CallOverrides): Promise<[string]>;

    supportsInterface(
      _interfaceId: BytesLike,
      overrides?: CallOverrides
    ): Promise<[boolean]>;

    transferOwnership(
      newOwner: string,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<ContractTransaction>;

    unpause(
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<ContractTransaction>;

    withdrawERC1155(
      _token: string,
      _tokenId: BigNumberish,
      _amount: BigNumberish,
      _sig: BytesLike,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<ContractTransaction>;

    withdrawERC1155Batch(
      _token: string,
      _tokenIds: BigNumberish[],
      _amounts: BigNumberish[],
      _sig: BytesLike,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<ContractTransaction>;

    withdrawERC20(
      _token: string,
      _amount: BigNumberish,
      _sig: BytesLike,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<ContractTransaction>;

    withdrawERC721(
      _token: string,
      _tokenId: BigNumberish,
      _sig: BytesLike,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<ContractTransaction>;

    withdrawERC721Batch(
      _token: string,
      _tokenIds: BigNumberish[],
      _sig: BytesLike,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<ContractTransaction>;
  };

  accepted(
    arg0: string,
    overrides?: CallOverrides
  ): Promise<
    [boolean, boolean, boolean] & {
      erc20: boolean;
      erc721: boolean;
      erc1155: boolean;
    }
  >;

  burnAsset(
    _asset: string,
    _tokenId: BigNumberish,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ContractTransaction>;

  burnBatchAsset(
    _asset: string,
    _tokenIds: BigNumberish[],
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ContractTransaction>;

  craftAsset(
    _asset: string,
    _resource: string,
    _currency: string,
    _tokenIds: BigNumberish[],
    _amounts: BigNumberish[],
    _currencyAmount: BigNumberish,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ContractTransaction>;

  createResource(
    _resource: string,
    _amount: BigNumberish,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ContractTransaction>;

  depositERC1155(
    _token: string,
    _tokenId: BigNumberish,
    _amount: BigNumberish,
    _sig: BytesLike,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ContractTransaction>;

  depositERC20(
    _token: string,
    _amount: BigNumberish,
    _sig: BytesLike,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ContractTransaction>;

  depositERC721(
    _token: string,
    _tokenId: BigNumberish,
    _sig: BytesLike,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ContractTransaction>;

  mergeAsset(
    _asset: string,
    _tokenId0: BigNumberish,
    _tokenId1: BigNumberish,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ContractTransaction>;

  mintAsset(
    _asset: string,
    _account: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ContractTransaction>;

  mintBatchAsset(
    _asset: string,
    _account: string,
    _amount: BigNumberish,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ContractTransaction>;

  mintBatchResource(
    _resource: string,
    _account: string,
    _tokenIds: BigNumberish[],
    _amounts: BigNumberish[],
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ContractTransaction>;

  nonces(arg0: string, overrides?: CallOverrides): Promise<BigNumber>;

  onERC1155BatchReceived(
    _operator: string,
    _from: string,
    _ids: BigNumberish[],
    _values: BigNumberish[],
    _data: BytesLike,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ContractTransaction>;

  onERC1155Received(
    _operator: string,
    _from: string,
    _id: BigNumberish,
    _value: BigNumberish,
    _data: BytesLike,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ContractTransaction>;

  onERC721Received(
    _operator: string,
    _from: string,
    _tokenId: BigNumberish,
    _data: BytesLike,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ContractTransaction>;

  owner(overrides?: CallOverrides): Promise<string>;

  pause(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ContractTransaction>;

  paused(overrides?: CallOverrides): Promise<boolean>;

  renounceOwnership(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ContractTransaction>;

  setSigner(
    _signer: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ContractTransaction>;

  setTokenAcceptance(
    _token: string,
    _accepted: AcceptedStruct,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ContractTransaction>;

  supportsInterface(
    _interfaceId: BytesLike,
    overrides?: CallOverrides
  ): Promise<boolean>;

  transferOwnership(
    newOwner: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ContractTransaction>;

  unpause(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ContractTransaction>;

  withdrawERC1155(
    _token: string,
    _tokenId: BigNumberish,
    _amount: BigNumberish,
    _sig: BytesLike,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ContractTransaction>;

  withdrawERC1155Batch(
    _token: string,
    _tokenIds: BigNumberish[],
    _amounts: BigNumberish[],
    _sig: BytesLike,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ContractTransaction>;

  withdrawERC20(
    _token: string,
    _amount: BigNumberish,
    _sig: BytesLike,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ContractTransaction>;

  withdrawERC721(
    _token: string,
    _tokenId: BigNumberish,
    _sig: BytesLike,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ContractTransaction>;

  withdrawERC721Batch(
    _token: string,
    _tokenIds: BigNumberish[],
    _sig: BytesLike,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ContractTransaction>;

  callStatic: {
    accepted(
      arg0: string,
      overrides?: CallOverrides
    ): Promise<
      [boolean, boolean, boolean] & {
        erc20: boolean;
        erc721: boolean;
        erc1155: boolean;
      }
    >;

    burnAsset(
      _asset: string,
      _tokenId: BigNumberish,
      overrides?: CallOverrides
    ): Promise<void>;

    burnBatchAsset(
      _asset: string,
      _tokenIds: BigNumberish[],
      overrides?: CallOverrides
    ): Promise<void>;

    craftAsset(
      _asset: string,
      _resource: string,
      _currency: string,
      _tokenIds: BigNumberish[],
      _amounts: BigNumberish[],
      _currencyAmount: BigNumberish,
      overrides?: CallOverrides
    ): Promise<void>;

    createResource(
      _resource: string,
      _amount: BigNumberish,
      overrides?: CallOverrides
    ): Promise<void>;

    depositERC1155(
      _token: string,
      _tokenId: BigNumberish,
      _amount: BigNumberish,
      _sig: BytesLike,
      overrides?: CallOverrides
    ): Promise<void>;

    depositERC20(
      _token: string,
      _amount: BigNumberish,
      _sig: BytesLike,
      overrides?: CallOverrides
    ): Promise<void>;

    depositERC721(
      _token: string,
      _tokenId: BigNumberish,
      _sig: BytesLike,
      overrides?: CallOverrides
    ): Promise<void>;

    mergeAsset(
      _asset: string,
      _tokenId0: BigNumberish,
      _tokenId1: BigNumberish,
      overrides?: CallOverrides
    ): Promise<void>;

    mintAsset(
      _asset: string,
      _account: string,
      overrides?: CallOverrides
    ): Promise<void>;

    mintBatchAsset(
      _asset: string,
      _account: string,
      _amount: BigNumberish,
      overrides?: CallOverrides
    ): Promise<void>;

    mintBatchResource(
      _resource: string,
      _account: string,
      _tokenIds: BigNumberish[],
      _amounts: BigNumberish[],
      overrides?: CallOverrides
    ): Promise<void>;

    nonces(arg0: string, overrides?: CallOverrides): Promise<BigNumber>;

    onERC1155BatchReceived(
      _operator: string,
      _from: string,
      _ids: BigNumberish[],
      _values: BigNumberish[],
      _data: BytesLike,
      overrides?: CallOverrides
    ): Promise<string>;

    onERC1155Received(
      _operator: string,
      _from: string,
      _id: BigNumberish,
      _value: BigNumberish,
      _data: BytesLike,
      overrides?: CallOverrides
    ): Promise<string>;

    onERC721Received(
      _operator: string,
      _from: string,
      _tokenId: BigNumberish,
      _data: BytesLike,
      overrides?: CallOverrides
    ): Promise<string>;

    owner(overrides?: CallOverrides): Promise<string>;

    pause(overrides?: CallOverrides): Promise<void>;

    paused(overrides?: CallOverrides): Promise<boolean>;

    renounceOwnership(overrides?: CallOverrides): Promise<void>;

    setSigner(_signer: string, overrides?: CallOverrides): Promise<void>;

    setTokenAcceptance(
      _token: string,
      _accepted: AcceptedStruct,
      overrides?: CallOverrides
    ): Promise<void>;

    signer(overrides?: CallOverrides): Promise<string>;

    supportsInterface(
      _interfaceId: BytesLike,
      overrides?: CallOverrides
    ): Promise<boolean>;

    transferOwnership(
      newOwner: string,
      overrides?: CallOverrides
    ): Promise<void>;

    unpause(overrides?: CallOverrides): Promise<void>;

    withdrawERC1155(
      _token: string,
      _tokenId: BigNumberish,
      _amount: BigNumberish,
      _sig: BytesLike,
      overrides?: CallOverrides
    ): Promise<void>;

    withdrawERC1155Batch(
      _token: string,
      _tokenIds: BigNumberish[],
      _amounts: BigNumberish[],
      _sig: BytesLike,
      overrides?: CallOverrides
    ): Promise<void>;

    withdrawERC20(
      _token: string,
      _amount: BigNumberish,
      _sig: BytesLike,
      overrides?: CallOverrides
    ): Promise<void>;

    withdrawERC721(
      _token: string,
      _tokenId: BigNumberish,
      _sig: BytesLike,
      overrides?: CallOverrides
    ): Promise<void>;

    withdrawERC721Batch(
      _token: string,
      _tokenIds: BigNumberish[],
      _sig: BytesLike,
      overrides?: CallOverrides
    ): Promise<void>;
  };

  filters: {
    "LogAssetCrafted(address,uint256)"(
      asset?: string | null,
      newTokenId?: null
    ): LogAssetCraftedEventFilter;
    LogAssetCrafted(
      asset?: string | null,
      newTokenId?: null
    ): LogAssetCraftedEventFilter;

    "LogAssetMerged(address,uint256,uint256,uint256)"(
      asset?: string | null,
      tokenId0?: null,
      tokenId1?: null,
      newTokenId?: null
    ): LogAssetMergedEventFilter;
    LogAssetMerged(
      asset?: string | null,
      tokenId0?: null,
      tokenId1?: null,
      newTokenId?: null
    ): LogAssetMergedEventFilter;

    "LogERC1155BatchReceived(address,address,uint256[],uint256[],bytes)"(
      operator?: string | null,
      from?: string | null,
      ids?: null,
      values?: null,
      data?: null
    ): LogERC1155BatchReceivedEventFilter;
    LogERC1155BatchReceived(
      operator?: string | null,
      from?: string | null,
      ids?: null,
      values?: null,
      data?: null
    ): LogERC1155BatchReceivedEventFilter;

    "LogERC1155Deposited(address,uint256,uint256,address)"(
      token?: string | null,
      tokenId?: null,
      amount?: null,
      account?: string | null
    ): LogERC1155DepositedEventFilter;
    LogERC1155Deposited(
      token?: string | null,
      tokenId?: null,
      amount?: null,
      account?: string | null
    ): LogERC1155DepositedEventFilter;

    "LogERC1155Received(address,address,uint256,uint256,bytes)"(
      operator?: string | null,
      from?: string | null,
      id?: null,
      value?: null,
      data?: null
    ): LogERC1155ReceivedEventFilter;
    LogERC1155Received(
      operator?: string | null,
      from?: string | null,
      id?: null,
      value?: null,
      data?: null
    ): LogERC1155ReceivedEventFilter;

    "LogERC1155Withdrawn(address,uint256,uint256,address)"(
      token?: string | null,
      tokenId?: null,
      amount?: null,
      account?: string | null
    ): LogERC1155WithdrawnEventFilter;
    LogERC1155Withdrawn(
      token?: string | null,
      tokenId?: null,
      amount?: null,
      account?: string | null
    ): LogERC1155WithdrawnEventFilter;

    "LogERC20Deposited(address,uint256,address)"(
      token?: string | null,
      amount?: null,
      account?: string | null
    ): LogERC20DepositedEventFilter;
    LogERC20Deposited(
      token?: string | null,
      amount?: null,
      account?: string | null
    ): LogERC20DepositedEventFilter;

    "LogERC20Withdrawn(address,uint256,address)"(
      token?: string | null,
      amount?: null,
      account?: string | null
    ): LogERC20WithdrawnEventFilter;
    LogERC20Withdrawn(
      token?: string | null,
      amount?: null,
      account?: string | null
    ): LogERC20WithdrawnEventFilter;

    "LogERC721Deposited(address,uint256,address)"(
      token?: string | null,
      tokenId?: null,
      account?: string | null
    ): LogERC721DepositedEventFilter;
    LogERC721Deposited(
      token?: string | null,
      tokenId?: null,
      account?: string | null
    ): LogERC721DepositedEventFilter;

    "LogERC721Received(address,address,uint256,bytes)"(
      operator?: string | null,
      from?: string | null,
      tokenId?: null,
      data?: null
    ): LogERC721ReceivedEventFilter;
    LogERC721Received(
      operator?: string | null,
      from?: string | null,
      tokenId?: null,
      data?: null
    ): LogERC721ReceivedEventFilter;

    "LogERC721Withdrawn(address,uint256,address)"(
      token?: string | null,
      tokenId?: null,
      account?: string | null
    ): LogERC721WithdrawnEventFilter;
    LogERC721Withdrawn(
      token?: string | null,
      tokenId?: null,
      account?: string | null
    ): LogERC721WithdrawnEventFilter;

    "LogSignerSet(address)"(signer?: null): LogSignerSetEventFilter;
    LogSignerSet(signer?: null): LogSignerSetEventFilter;

    "LogTokenAcceptanceSet(address,tuple)"(
      token?: string | null,
      accepted?: null
    ): LogTokenAcceptanceSetEventFilter;
    LogTokenAcceptanceSet(
      token?: string | null,
      accepted?: null
    ): LogTokenAcceptanceSetEventFilter;

    "OwnershipTransferred(address,address)"(
      previousOwner?: string | null,
      newOwner?: string | null
    ): OwnershipTransferredEventFilter;
    OwnershipTransferred(
      previousOwner?: string | null,
      newOwner?: string | null
    ): OwnershipTransferredEventFilter;

    "Paused(address)"(account?: null): PausedEventFilter;
    Paused(account?: null): PausedEventFilter;

    "Unpaused(address)"(account?: null): UnpausedEventFilter;
    Unpaused(account?: null): UnpausedEventFilter;
  };

  estimateGas: {
    accepted(arg0: string, overrides?: CallOverrides): Promise<BigNumber>;

    burnAsset(
      _asset: string,
      _tokenId: BigNumberish,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<BigNumber>;

    burnBatchAsset(
      _asset: string,
      _tokenIds: BigNumberish[],
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<BigNumber>;

    craftAsset(
      _asset: string,
      _resource: string,
      _currency: string,
      _tokenIds: BigNumberish[],
      _amounts: BigNumberish[],
      _currencyAmount: BigNumberish,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<BigNumber>;

    createResource(
      _resource: string,
      _amount: BigNumberish,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<BigNumber>;

    depositERC1155(
      _token: string,
      _tokenId: BigNumberish,
      _amount: BigNumberish,
      _sig: BytesLike,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<BigNumber>;

    depositERC20(
      _token: string,
      _amount: BigNumberish,
      _sig: BytesLike,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<BigNumber>;

    depositERC721(
      _token: string,
      _tokenId: BigNumberish,
      _sig: BytesLike,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<BigNumber>;

    mergeAsset(
      _asset: string,
      _tokenId0: BigNumberish,
      _tokenId1: BigNumberish,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<BigNumber>;

    mintAsset(
      _asset: string,
      _account: string,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<BigNumber>;

    mintBatchAsset(
      _asset: string,
      _account: string,
      _amount: BigNumberish,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<BigNumber>;

    mintBatchResource(
      _resource: string,
      _account: string,
      _tokenIds: BigNumberish[],
      _amounts: BigNumberish[],
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<BigNumber>;

    nonces(arg0: string, overrides?: CallOverrides): Promise<BigNumber>;

    onERC1155BatchReceived(
      _operator: string,
      _from: string,
      _ids: BigNumberish[],
      _values: BigNumberish[],
      _data: BytesLike,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<BigNumber>;

    onERC1155Received(
      _operator: string,
      _from: string,
      _id: BigNumberish,
      _value: BigNumberish,
      _data: BytesLike,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<BigNumber>;

    onERC721Received(
      _operator: string,
      _from: string,
      _tokenId: BigNumberish,
      _data: BytesLike,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<BigNumber>;

    owner(overrides?: CallOverrides): Promise<BigNumber>;

    pause(
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<BigNumber>;

    paused(overrides?: CallOverrides): Promise<BigNumber>;

    renounceOwnership(
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<BigNumber>;

    setSigner(
      _signer: string,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<BigNumber>;

    setTokenAcceptance(
      _token: string,
      _accepted: AcceptedStruct,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<BigNumber>;

    signer(overrides?: CallOverrides): Promise<BigNumber>;

    supportsInterface(
      _interfaceId: BytesLike,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    transferOwnership(
      newOwner: string,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<BigNumber>;

    unpause(
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<BigNumber>;

    withdrawERC1155(
      _token: string,
      _tokenId: BigNumberish,
      _amount: BigNumberish,
      _sig: BytesLike,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<BigNumber>;

    withdrawERC1155Batch(
      _token: string,
      _tokenIds: BigNumberish[],
      _amounts: BigNumberish[],
      _sig: BytesLike,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<BigNumber>;

    withdrawERC20(
      _token: string,
      _amount: BigNumberish,
      _sig: BytesLike,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<BigNumber>;

    withdrawERC721(
      _token: string,
      _tokenId: BigNumberish,
      _sig: BytesLike,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<BigNumber>;

    withdrawERC721Batch(
      _token: string,
      _tokenIds: BigNumberish[],
      _sig: BytesLike,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<BigNumber>;
  };

  populateTransaction: {
    accepted(
      arg0: string,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    burnAsset(
      _asset: string,
      _tokenId: BigNumberish,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<PopulatedTransaction>;

    burnBatchAsset(
      _asset: string,
      _tokenIds: BigNumberish[],
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<PopulatedTransaction>;

    craftAsset(
      _asset: string,
      _resource: string,
      _currency: string,
      _tokenIds: BigNumberish[],
      _amounts: BigNumberish[],
      _currencyAmount: BigNumberish,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<PopulatedTransaction>;

    createResource(
      _resource: string,
      _amount: BigNumberish,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<PopulatedTransaction>;

    depositERC1155(
      _token: string,
      _tokenId: BigNumberish,
      _amount: BigNumberish,
      _sig: BytesLike,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<PopulatedTransaction>;

    depositERC20(
      _token: string,
      _amount: BigNumberish,
      _sig: BytesLike,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<PopulatedTransaction>;

    depositERC721(
      _token: string,
      _tokenId: BigNumberish,
      _sig: BytesLike,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<PopulatedTransaction>;

    mergeAsset(
      _asset: string,
      _tokenId0: BigNumberish,
      _tokenId1: BigNumberish,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<PopulatedTransaction>;

    mintAsset(
      _asset: string,
      _account: string,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<PopulatedTransaction>;

    mintBatchAsset(
      _asset: string,
      _account: string,
      _amount: BigNumberish,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<PopulatedTransaction>;

    mintBatchResource(
      _resource: string,
      _account: string,
      _tokenIds: BigNumberish[],
      _amounts: BigNumberish[],
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<PopulatedTransaction>;

    nonces(
      arg0: string,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    onERC1155BatchReceived(
      _operator: string,
      _from: string,
      _ids: BigNumberish[],
      _values: BigNumberish[],
      _data: BytesLike,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<PopulatedTransaction>;

    onERC1155Received(
      _operator: string,
      _from: string,
      _id: BigNumberish,
      _value: BigNumberish,
      _data: BytesLike,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<PopulatedTransaction>;

    onERC721Received(
      _operator: string,
      _from: string,
      _tokenId: BigNumberish,
      _data: BytesLike,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<PopulatedTransaction>;

    owner(overrides?: CallOverrides): Promise<PopulatedTransaction>;

    pause(
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<PopulatedTransaction>;

    paused(overrides?: CallOverrides): Promise<PopulatedTransaction>;

    renounceOwnership(
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<PopulatedTransaction>;

    setSigner(
      _signer: string,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<PopulatedTransaction>;

    setTokenAcceptance(
      _token: string,
      _accepted: AcceptedStruct,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<PopulatedTransaction>;

    signer(overrides?: CallOverrides): Promise<PopulatedTransaction>;

    supportsInterface(
      _interfaceId: BytesLike,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    transferOwnership(
      newOwner: string,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<PopulatedTransaction>;

    unpause(
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<PopulatedTransaction>;

    withdrawERC1155(
      _token: string,
      _tokenId: BigNumberish,
      _amount: BigNumberish,
      _sig: BytesLike,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<PopulatedTransaction>;

    withdrawERC1155Batch(
      _token: string,
      _tokenIds: BigNumberish[],
      _amounts: BigNumberish[],
      _sig: BytesLike,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<PopulatedTransaction>;

    withdrawERC20(
      _token: string,
      _amount: BigNumberish,
      _sig: BytesLike,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<PopulatedTransaction>;

    withdrawERC721(
      _token: string,
      _tokenId: BigNumberish,
      _sig: BytesLike,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<PopulatedTransaction>;

    withdrawERC721Batch(
      _token: string,
      _tokenIds: BigNumberish[],
      _sig: BytesLike,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<PopulatedTransaction>;
  };
}
